/*
	Highly divisible triangular number

	The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

		1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

	Let us list the factors of the first seven triangle numbers:

		 1: 1
		 3: 1,3
		 6: 1,2,3,6
		10: 1,2,5,10
		15: 1,3,5,15
		21: 1,3,7,21
		28: 1,2,4,7,14,28

	We can see that 28 is the first triangle number to have over five divisors.

	What is the value of the first triangle number to have over five hundred divisors?
 */

var utils = require('./utils.js');

// also used in problem 5
var countFactor = function(num, factor) {
	var count = 0;
	while (factor <= num && num % factor === 0) {
		num /= factor;
		count++;
	}
	return count;
};

// loops through each prime factor of the given number
var eachPrimeFactor = function(num, fn) {
	for (var factor = 2; factor <= num; factor++) {
		var count = countFactor(num, factor);
		if (count > 0) {
			fn(factor, count);
			num /= Math.pow(factor, count);
		}
	}
};

var countDivisors = function(num) {
	var divisors = 1;
	eachPrimeFactor(num, function(factor, count) {
		divisors *= count + 1;
	});
	return divisors;
};

var given = [500];
module.exports = {
	problemNumber: 12,
	description: 'First triangle number to have over five hundred divisors',
	answer: 76576500,
	solutions: {
		'prime factorization': {
			fn: function(numDivisors) {
				var count, num = 1, i = 2;
				// loop through triangle numbers
				while ((count = countDivisors(num)) <= numDivisors) {
					num += i++;
				}
				return num;
			},
			run: function() {
				return this.fn.apply(this, [500]);
			}
		}
	}
};

utils.logAndCheckSolutions(module.exports);
utils.benchmarkSolutions(module.exports.solutions);
